<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="phonebook">

	<!-- PersonVo Map -->
	<!-- dao 필드명과 DB컬럼명을 맞춰줌. -->
	<resultMap id="resultMapPersonVo" type="com.javaex.vo.PersonVo">
		<result column="person_id" property="personId" />
		<result column="name" property="name" />
		<result column="hp" property="hp" />
		<result column="company" property="company" />
	</resultMap>
	
	<!-- 쿼리문 작성 --> 
	<!-- 전체리스트가져오기 resultMap-->
	<!-- resultMap = "Map 중에 저 이름으로 된 것을 찾는다" -->
	<select id="selectList2" resultMap="resultMapPersonVo">
		<![CDATA[
			select  person_id,
			        name,
			        hp,
			        company
			from person
			order by person_id desc
		]]>
	</select>
	
	<!-- select id="쿼리문이름" resultType="뭘로 받아줄건지" -->
	<!-- 전체리스트가져오기 -->
	<select id="selectList" resultType="PersonVo">
		<!--CDATA 안에는 태그로 인식하지 말아라 라는 표현  -->
		<!-- setPersonId(), setName() 이런 개념이기 때문에 만약 db컬럼명과 dao필드 명이 다르면
			 as를 이용해서 필드명과 컬럼명을 맞춰주면 된다. -->
		<![CDATA[
			select  person_id as personId,
			        name,
			        hp,
			        company
			from person
			order by person_id desc
		]]>
	</select>
	
	<!-- 전화번호 저장 -->
	<!-- parameterType="쿼리문에서 써야할(받아온 데이터) 데이타의 위치" -->
	<!-- #{name}이라고 쓰면 getName()으로 인식함.그래서 값을 받아온다. -->
	<insert id="insert" parameterType="com.javaex.vo.PersonVo">
		<![CDATA[
			insert into person
			values (seq_person_id.nextval, 
					#{name}, 
					#{hp}, 
					#{company})
		]]>
	</insert>

	<!-- 전화번호 삭제 -->
	<!-- 변수명은 아무렇게나 줘도 상관없음. -->
	<delete id="delete" parameterType="int">
		<![CDATA[
			delete from person
			where person_id = #{personId}
		]]>
	</delete>
	
	<!-- 사람 한명 불러오기 -->
	<!-- resultType은 저 쿼리 내용을 담아줄 곳 경로  parameterType은 가져오는 변수 타입-->
	<select id="selectOne" parameterType="int" resultType="com.javaex.vo.PersonVo">
		<![CDATA[
			select  person_id as personId,
			        name,
			        hp,
			        company
			from person
			where person_id = #{personId}
			order by person_id desc
		]]>
	</select>
	
	<!-- 사람 한명 불러오기2 -->
	<!-- map 방식 -->
	<select id="selectOne2" parameterType="int" resultType="map">
		<![CDATA[
			select  person_id as personId,
			        name,
			        hp,
			        company
			from person
			where person_id = #{personId}
			order by person_id desc
		]]>
	</select>
	
	<!-- 전화번호 수정 -->
	<update id="update" parameterType="com.javaex.vo.PersonVo">
		<![CDATA[
			update person
			set name = #{name},
			    hp = #{hp},
			    company = #{company}
			where person_id = #{personId}
		]]>
	</update>

	<!-- 수정2 -->
	<!-- map의 key값들을 넣어줘야함. -->
	<!-- 
		personMap.put("id", personId);
		personMap.put("name", name);
		personMap.put("hp", hp);
		personMap.put("company", company);
	 -->
	<update id="update2" parameterType="map">
		<![CDATA[
			update person
			set name = #{name},
			    hp = #{hp},
			    company = #{company}
			where person_id = #{id}
		]]>
	</update>
	
</mapper>